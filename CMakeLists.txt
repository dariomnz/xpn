cmake_minimum_required(VERSION 3.16)

project(XPN VERSION 3.0.0 LANGUAGES C CXX)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# add_compile_options("-DDEBUG")
add_compile_options("-D_GNU_SOURCE" "-DMPICH_SKIP_MPICXX")
# add_compile_options("-D_GNU_SOURCE" "-DMPICH_SKIP_MPICXX" "-D_REENTRANT")
add_compile_options("-fPIC" "-O2" "-g" "-g3" "-ggdb" "-Wall" "-Wextra")

option(ENABLE_MPI_SERVER "Enable the mpi_server module" OFF)
if(ENABLE_MPI_SERVER)
    message(STATUS "ENABLE_MPI_SERVER : ${ENABLE_MPI_SERVER}")
    add_compile_options("-DENABLE_MPI_SERVER")
    set(MPI_PATH ${ENABLE_MPI_SERVER})
    find_library(MPI_LIBRARY NAMES mpi PATHS ${MPI_PATH}/lib /usr/lib /usr/local/lib)
    find_path(MPI_INCLUDE_DIR mpi.h PATHS ${MPI_PATH}/include /usr/include /usr/local/include)
    message(STATUS "MPI_LIBRARY : ${MPI_LIBRARY}")
    message(STATUS "MPI_INCLUDE_DIR : ${MPI_INCLUDE_DIR}")
else()
    message(STATUS "ENABLE_MPI_SERVER : false")
endif(ENABLE_MPI_SERVER)

option(ENABLE_FABRIC_SERVER "Enable the fabric_server module" OFF)
if(ENABLE_FABRIC_SERVER)
    message(STATUS "ENABLE_FABRIC_SERVER : ${ENABLE_FABRIC_SERVER}")
    add_compile_options("-DENABLE_FABRIC_SERVER")
    set(LIBFABRIC_PATH ${ENABLE_FABRIC_SERVER})
    add_subdirectory(libs/lfi)
else()
    message(STATUS "ENABLE_FABRIC_SERVER : false")
endif(ENABLE_FABRIC_SERVER)

option(ENABLE_MQTT_SERVER "Enable the mq_server module" OFF)
if(ENABLE_MQTT_SERVER)
    message(STATUS "ENABLE_MQTT_SERVER : ${ENABLE_MQTT_SERVER}")
    add_compile_options("-DENABLE_MQTT_SERVER")
    set(MOSQUITTO_PATH ${ENABLE_MQTT_SERVER})
    find_library(MOSQUITTO_LIBRARY NAMES mosquitto PATHS ${MOSQUITTO_PATH}/lib /usr/lib /usr/local/lib)
    find_path(MOSQUITTO_INCLUDE_DIR mosquitto.h PATHS ${MOSQUITTO_PATH}/include /usr/include /usr/local/include)
    message(STATUS "MOSQUITTO_LIBRARY : ${MOSQUITTO_LIBRARY}")
    message(STATUS "MOSQUITTO_INCLUDE_DIR : ${MOSQUITTO_INCLUDE_DIR}")
else()
    message(STATUS "ENABLE_MQTT_SERVER : false")
endif(ENABLE_MQTT_SERVER)

link_libraries("pthread" "dl")

add_subdirectory(src/bypass)
# add_compile_options("-DDEBUG")
add_subdirectory(src/base_cpp)
add_subdirectory(src/xpn_filesystem)
add_subdirectory(src/xpn_client)
add_subdirectory(src/xpn_server)
add_subdirectory(src/xpn_controller)
add_subdirectory(src/utils)


option(ENABLE_FUSE "Enable the fuse module" OFF)
if(ENABLE_FUSE)
    message(STATUS "ENABLE_FUSE : ${ENABLE_FUSE}")
    add_compile_options("-DENABLE_FUSE")
    set(FUSE_PATH ${ENABLE_FUSE})
    find_library(FUSE_LIBRARY NAMES fuse3 PATHS ${FUSE_PATH}/lib /usr/lib /usr/local/lib /usr/lib/x86_64-linux-gnu "${FUSE_LIBRARY}")
    find_path(FUSE_INCLUDE_DIR fuse.h PATHS ${FUSE_PATH}/include /usr/include /usr/local/include PATH_SUFFIXES fuse3)
    message(STATUS "FUSE_LIBRARY : ${FUSE_LIBRARY}")
    message(STATUS "FUSE_INCLUDE_DIR : ${FUSE_INCLUDE_DIR}")
    add_subdirectory(src/connector_fuse)
else()
        message(STATUS "ENABLE_FUSE : false")
endif(ENABLE_FUSE)


option(BUILD_TESTS "Build the test" OFF)
if(BUILD_TESTS)
    message(STATUS "BUILD_TESTS : true")
    enable_testing()
    add_subdirectory(test)
else()
    message(STATUS "BUILD_TESTS : false")
endif(BUILD_TESTS)


install(CODE "
    message(STATUS \"Create_symlink: from \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/lib to \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/lib64\")
    execute_process(COMMAND ln -s -f -T \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/lib \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/lib64)
")

unset(ENABLE_MPI_SERVER CACHE)
unset(ENABLE_FABRIC_SERVER CACHE)
unset(ENABLE_MQTT_SERVER CACHE)
unset(ENABLE_FUSE CACHE)
unset(BUILD_TESTS CACHE)